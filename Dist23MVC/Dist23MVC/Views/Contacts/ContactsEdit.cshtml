@model Dist23MVC.Models.ContactsViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contacts</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.contact.pKey)
        @Html.HiddenFor(model => model.contact.DistKey)


        <div class="form-group">
            @Html.LabelFor(model => model.contact.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contact.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contact.phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact.phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.contact.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Session["AccessLevel"].ToString() == "10")
        {

            <div class="form-group">
                @Html.LabelFor(model => model.contact.password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contact.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.contact.password, "", new { @class = "text-danger" })
                </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.contact.AccessLvl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.contact.AccessLvl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.contact.AccessLvl, "", new { @class = "text-danger" })
                    </div>
                </div>
        }
        else
        {
            @Html.HiddenFor(model => model.contact.password)
            @Html.HiddenFor(model => model.contact.AccessLvl)
        }
        <table class="table">
            <tr>
                <th>
                    @Html.Label("Position")
                </th>
                <th>
                    @Html.Label("Group (or Dist)")
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.contactPositions)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PositionName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GroupName)
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "ContactPositionDelete", new { id = item. })
                    </td>
                </tr>
            }
        </table>
        @Html.ActionLink("Add Position", "PositionCreate", new { id = Model.contact.pKey })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ContactsIndex")
</div>
