@model Dist23MVC.Models.Payments

@{
    ViewBag.Title = "Register";
}

<h4>@ViewBag.EventName</h4>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.EventKey)
    @Html.HiddenFor(model => model.Amount)



    <div class="form-horizontal">
        <h4>@ViewBag.PaymentType</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            List<SelectListItem> TypeList = new List<SelectListItem>();
            TypeList.Add(new SelectListItem
            {
                Text = "N/A",
                Value = "N/A"
            });

            TypeList.Add(new SelectListItem
            {
                Text = "Scholarship Needed",
                Value = "Scholarship Needed"
            });

            TypeList.Add(new SelectListItem
            {
                Text = "Scholarship Payment",
                Value = "Scholarship Payment",
            });
        }
        <div class="form-group">
            @Html.Label("Scholarship", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PaymentType, TypeList, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "AA",
        Value = "AA"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Alanon",
        Value = "Alanon"
    });
}

        <div class="form-group">
            @Html.LabelFor(model => model.Fellowship, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Fellowship, listItems)
                @Html.ValidationMessageFor(model => model.Fellowship, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Homegroup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Homegroup, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Homegroup, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@if (Model.paymentSetup.hasSpecial)
        {
            <div class="form-group">
                @Html.Label("Choose an option:")
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.paymentSetup.Amount, (IEnumerable<SelectListItem>)ViewData["SpecList"], new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.paymentSetup.Amount, "", new { @class = "text-danger" })
                </div>
            </div>
        }*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
