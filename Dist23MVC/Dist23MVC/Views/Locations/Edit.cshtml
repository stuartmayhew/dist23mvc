@model Dist23MVC.Models.Locations
<script src="http://maps.google.com/maps/api/js" type="text/javascript"></script>
<style>
    #map_canvas img {
        max-width: none;
    }
</style>

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Locations</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.pKey)
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="map_canvas" style="height: 600px;"></div>


@section scripts { 
    <script>
        var service = "https://maps.googleapis.com/maps/api/geocode/json?address=";
        var key = "&key=AIzaSyBUbue1hPb6QiO2NN7HTULO3PrCn_5B11E"

        $(document).ready(function () {
            getMap();
        });

        function getMap() {
            var addr = $("#Address").val();
            var getAddrLookup = service + addr + key;
            $.getJSON(getAddrLookup, function (results) {
                var lat = results.results[0].geometry.location.lat;
                var long = results.results[0].geometry.location.lng;
                var location = new google.maps.LatLng(lat, long);
                var mapOptions = {
                    zoom: 16,
                    center: location,
                    mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
                };
                var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

                var marker = new google.maps.Marker({
                    position: location,
                    map: map,
                });

                // This shows adding a simple pin "marker" - this happens to be the Tate Gallery in Liverpool!
            });
        }
    </script>

}
                    @*AIzaSyBUbue1hPb6QiO2NN7HTULO3PrCn_5B11E*@
                    @*https://maps.googleapis.com/maps/api/geocode/json?address=ADDRESS&key=AIzaSyBUbue1hPb6QiO2NN7HTULO3PrCn_5B11E*@
                    @*$(document).ready(function () {
                    Initialize();
                });

                $("#getGeo").click(function () {
                    var addr = $("#Address").val();
                    getLatLong(addr);
                });
                function getLatLong(address) {
                    var geocoder = new google.maps.Geocoder();
                    var result = "";
                    geocoder.geocode({ 'address': address, 'region': 'uk' }, function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            result[lat] = results[0].geometry.location.Pa;
                            result[long] = results[0].geometry.location.Qa;
                        } else {
                            result = "Unable to find address: " + status;
                        }
                        storeResult(result);
                    });
                }

                function storeResult(resultStr)
                {
                    $("#lat").val(resultStr[lat]);
                }

                function Initialize() {

                    // Google has tweaked their interface somewhat - this tells the api to use that new UI
                    google.maps.visualRefresh = true;
                    var Liverpool = new google.maps.LatLng(53.408841, -2.981397);

                    // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
                    var mapOptions = {
                        zoom: 14,
                        center: Liverpool,
                        mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
                    };

                    // This makes the div with id "map_canvas" a google map
                    var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

                    // This shows adding a simple pin "marker" - this happens to be the Tate Gallery in Liverpool!
                    var myLatlng = new google.maps.LatLng(53.40091, -2.994464);

                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                        title: 'Tate Gallery'
                    });

                    // You can make markers different colors...  google it up!
                    marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')

                    // a sample list of JSON encoded data of places to visit in Liverpool, UK
                    // you can either make up a JSON list server side, or call it from a controller using JSONResult
                    var data = [
                              { "Id": 1, "PlaceName": "Liverpool Museum", "OpeningHours": "9-5, M-F", "GeoLong": "53.410146", "GeoLat": "-2.979919" },
                              { "Id": 2, "PlaceName": "Merseyside Maritime Museum ", "OpeningHours": "9-1,2-5, M-F", "GeoLong": "53.401217", "GeoLat": "-2.993052" },
                              { "Id": 3, "PlaceName": "Walker Art Gallery", "OpeningHours": "9-7, M-F", "GeoLong": "53.409839", "GeoLat": "-2.979447" },
                              { "Id": 4, "PlaceName": "National Conservation Centre", "OpeningHours": "10-6, M-F", "GeoLong": "53.407511", "GeoLat": "-2.984683" }
                    ];

                    // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
                    $.each(data, function (i, item) {
                        var marker = new google.maps.Marker({
                            'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                            'map': map,
                            'title': item.PlaceName
                        });

                        // Make the marker-pin blue!
                        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                        // put in some information about each json object - in this case, the opening hours.
                        var infowindow = new google.maps.InfoWindow({
                            content: "<div class='infoDiv'><h2>" + item.PlaceName + "</h2>" + "<div><h4>Opening hours: " + item.OpeningHours + "</h4></div></div>"
                        });

                        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                        google.maps.event.addListener(marker, 'click', function () {
                            infowindow.open(map, marker);
                        });

                    })
                }*@
