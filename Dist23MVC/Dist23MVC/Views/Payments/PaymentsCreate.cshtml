@model Dist23MVC.Models.Payments

@{
    ViewBag.Title = "Register";
}

<h4>@ViewBag.EventName</h4>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.DistKey)
    @Html.HiddenFor(model => model.EventKey)


    <div class="form-horizontal">
        <h4>@ViewBag.PaymentType</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.paymentSetup.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.paymentSetup.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.paymentSetup.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.paymentSetup.hasSpecial)
        {
            @*<div class="form-group">
                @Html.Label("Choose an option:")
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.paymentSetup.Amount, (IEnumerable<SelectListItem>)ViewData["SpecList"], new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.paymentSetup.Amount, "", new { @class = "text-danger" })
                </div>
            </div>*@
        }
        <div class="form-group">
            @Html.LabelFor(model => model.PaypalButton, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Raw((string)Model.PaypalButton)
                @Html.ValidationMessageFor(model => model.PaypalButton, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
